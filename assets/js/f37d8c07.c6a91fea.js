"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[5411],{8931:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>r,default:()=>h,frontMatter:()=>a,metadata:()=>s,toc:()=>c});var o=n(4964),i=n(1523);const a={},r="Aggregations",s={id:"docs/how-it-works/features/aggregations",title:"Aggregations",description:"Aggregations are a way to summarize data over a time window. They are used to calculate the feature value, and are",source:"@site/docs/docs/how-it-works/features/aggregations.md",sourceDirName:"docs/how-it-works/features",slug:"/docs/how-it-works/features/aggregations",permalink:"/docs/how-it-works/features/aggregations",draft:!1,unlisted:!1,editUrl:"https://github.com/raptor-ml/docs/tree/master/docs/docs/how-it-works/features/aggregations.md",tags:[],version:"current",frontMatter:{},sidebar:"docs",previous:{title:"Features",permalink:"/docs/how-it-works/features/"},next:{title:"Context",permalink:"/docs/how-it-works/features/context"}},l={},c=[{value:"Aggregation Types",id:"aggregation-types",level:2},{value:"How does it work?",id:"how-does-it-work",level:2},{value:"How does it work in production?",id:"how-does-it-work-in-production",level:2}];function d(e){const t={a:"a",em:"em",h1:"h1",h2:"h2",img:"img",li:"li",ol:"ol",p:"p",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(t.h1,{id:"aggregations",children:"Aggregations"}),"\n",(0,o.jsxs)(t.p,{children:["Aggregations are a way to summarize data over a time window. They are used to calculate the feature value, and are\ndefined in the ",(0,o.jsx)(t.a,{href:"../../../reference/feature-builders/",children:"Builder"})," of the feature."]}),"\n",(0,o.jsx)(t.p,{children:"Since aggregations are quite complex to achieve in a production system, Raptor allow you to define them in a declarative\nway, and then it will take care of the implementation."}),"\n",(0,o.jsx)(t.h2,{id:"aggregation-types",children:"Aggregation Types"}),"\n",(0,o.jsx)(t.p,{children:"Raptor supports the following aggregation types:"}),"\n",(0,o.jsxs)(t.ul,{children:["\n",(0,o.jsxs)(t.li,{children:[(0,o.jsx)(t.strong,{children:"Count"})," - Counts the number of values in the time window."]}),"\n",(0,o.jsxs)(t.li,{children:[(0,o.jsx)(t.strong,{children:"Sum"})," - Sums the values in the time window."]}),"\n",(0,o.jsxs)(t.li,{children:[(0,o.jsx)(t.strong,{children:"Average"})," - Calculates the average of the values in the time window."]}),"\n",(0,o.jsxs)(t.li,{children:[(0,o.jsx)(t.strong,{children:"Min"})," - Calculates the minimum value in the time window."]}),"\n",(0,o.jsxs)(t.li,{children:[(0,o.jsx)(t.strong,{children:"Max"})," - Calculates the maximum value in the time window."]}),"\n"]}),"\n",(0,o.jsx)(t.h2,{id:"how-does-it-work",children:"How does it work?"}),"\n",(0,o.jsx)(t.p,{children:"Raptor implements aggregations differently in production, and in development/training mode:"}),"\n",(0,o.jsxs)(t.ol,{children:["\n",(0,o.jsx)(t.li,{children:"In development mode, Raptor will use native Pandas to aggregate the data over the whole dataset."}),"\n",(0,o.jsx)(t.li,{children:'In production mode, since we don\'t have the whole dataset yet, Raptor uses the "bucketing algorithm" to aggregate the\ndata over the time window.'}),"\n"]}),"\n",(0,o.jsx)(t.h2,{id:"how-does-it-work-in-production",children:"How does it work in production?"}),"\n",(0,o.jsx)(t.p,{children:"In production, we are required to achieve a quick latency, scalability and cost-effectiveness. Considering these\nrequirements, we cannot recalculate the aggregation on every request and go through all of our data points."}),"\n",(0,o.jsx)(t.p,{children:'To achieve that, we are using a "bucketing algorithm" that will split the calculation over a smaller granularity(\nbuckets), and then aggregate the results.'}),"\n",(0,o.jsx)(t.p,{children:(0,o.jsx)(t.img,{src:"/assets/aggr-bucketing-algo.drawio.png",alt:"Raptor's_bucketing_algorithm"})}),"\n",(0,o.jsxs)(t.p,{children:["In the example above, we are calculating the Sum of the values over the last ",(0,o.jsx)(t.em,{children:"1 hour"}),", with a ",(0,o.jsx)(t.em,{children:"5 minutes"})," granularity.\nThat means that we will get the sum of the values over the last hour with an accuracy of 5 minutes."]}),"\n",(0,o.jsx)(t.p,{children:"To achieve that, we will split the time window into 12 buckets, each bucket will include the sum of the values over a\nperiod of 5 minutes, then we will summarize the results of the buckets to get the final result."})]})}function h(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,o.jsx)(t,{...e,children:(0,o.jsx)(d,{...e})}):d(e)}},1523:(e,t,n)=>{n.d(t,{R:()=>r,x:()=>s});var o=n(6504);const i={},a=o.createContext(i);function r(e){const t=o.useContext(a);return o.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function s(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:r(e.components),o.createElement(a.Provider,{value:t},e.children)}}}]);