"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[1137],{4907:(e,t,r)=>{r.d(t,{Zo:()=>u,kt:()=>f});var n=r(9953);function i(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function a(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){i(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,n,i=function(e,t){if(null==e)return{};var r,n,i={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(i[r]=e[r]);return i}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(i[r]=e[r])}return i}var l=n.createContext({}),c=function(e){var t=n.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):a(a({},t),e)),r},u=function(e){var t=c(e.components);return n.createElement(l.Provider,{value:t},e.children)},p="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var r=e.components,i=e.mdxType,o=e.originalType,l=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),p=c(r),m=i,f=p["".concat(l,".").concat(m)]||p[m]||d[m]||o;return r?n.createElement(f,a(a({ref:t},u),{},{components:r})):n.createElement(f,a({ref:t},u))}));function f(e,t){var r=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var o=r.length,a=new Array(o);a[0]=m;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[p]="string"==typeof e?e:i,a[1]=s;for(var c=2;c<o;c++)a[c]=r[c];return n.createElement.apply(null,a)}return n.createElement.apply(null,r)}m.displayName="MDXCreateElement"},9786:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>l,contentTitle:()=>a,default:()=>p,frontMatter:()=>o,metadata:()=>s,toc:()=>c});var n=r(1943),i=(r(9953),r(4907));const o={title:"Counters"},a=void 0,s={unversionedId:"guides/labsdk/simple-counter",id:"guides/labsdk/simple-counter",title:"Counters",description:'We can also build features that have a lifetime counter, like "lifetime views".',source:"@site/docs/guides/labsdk/3-simple-counter.md",sourceDirName:"guides/labsdk",slug:"/guides/labsdk/simple-counter",permalink:"/docs/guides/labsdk/simple-counter",draft:!1,editUrl:"https://github.com/raptor-ml/docs/tree/master/docs/guides/labsdk/3-simple-counter.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{title:"Counters"},sidebar:"guides",previous:{title:"Aggregations",permalink:"/docs/guides/labsdk/aggregations"},next:{title:"Derived feature (or How to do Joins?)",permalink:"/docs/guides/labsdk/derived"}},l={},c=[],u={toc:c};function p(e){let{components:t,...r}=e;return(0,i.kt)("wrapper",(0,n.Z)({},u,r,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,'We can also build features that have a lifetime counter, like "lifetime views".\nThis is actually a simple ',(0,i.kt)("inlineCode",{parentName:"p"},"int")," feature, that we're incrementing atomically:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-python",metastring:"showLineNumbers",showLineNumbers:!0},'@raptor.register(int, staleness=\'10h\', freshness=\'1m\')\ndef views(**req: RaptorRequest):\n    """lifetime views"""\n    incr_feature("views.default", req["entity_id"], 1)\n    return\n')))}p.isMDXComponent=!0}}]);