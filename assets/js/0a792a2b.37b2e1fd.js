"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[4370],{84907:(e,t,r)=>{r.d(t,{Zo:()=>l,kt:()=>f});var n=r(39953);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function c(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?c(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):c(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},c=Object.keys(e);for(n=0;n<c.length;n++)r=c[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var c=Object.getOwnPropertySymbols(e);for(n=0;n<c.length;n++)r=c[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var a=n.createContext({}),u=function(e){var t=n.useContext(a),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},l=function(e){var t=u(e.components);return n.createElement(a.Provider,{value:t},e.children)},p="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,c=e.originalType,a=e.parentName,l=s(e,["components","mdxType","originalType","parentName"]),p=u(r),m=o,f=p["".concat(a,".").concat(m)]||p[m]||d[m]||c;return r?n.createElement(f,i(i({ref:t},l),{},{components:r})):n.createElement(f,i({ref:t},l))}));function f(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var c=r.length,i=new Array(c);i[0]=m;var s={};for(var a in t)hasOwnProperty.call(t,a)&&(s[a]=t[a]);s.originalType=e,s[p]="string"==typeof e?e:o,i[1]=s;for(var u=2;u<c;u++)i[u]=r[u];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}m.displayName="MDXCreateElement"},8837:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>a,contentTitle:()=>i,default:()=>p,frontMatter:()=>c,metadata:()=>s,toc:()=>u});var n=r(1943),o=(r(39953),r(84907));const c={},i=void 0,s={unversionedId:"docs/production/query",id:"docs/production/query",title:"query",description:"[//]: # (This section will cover how to query features in production using the accessor API)",source:"@site/docs/docs/production/query.md",sourceDirName:"docs/production",slug:"/docs/production/query",permalink:"/docs/production/query",draft:!1,editUrl:"https://github.com/raptor-ml/docs/tree/master/docs/docs/production/query.md",tags:[],version:"current",frontMatter:{},sidebar:"docs",previous:{title:"Managing Raptor Assets",permalink:"/docs/production/asset-management"},next:{title:"Managing runtimes",permalink:"/docs/production/runtimes"}},a={},u=[{value:"Accessing the Core Kuberentes service",id:"accessing-the-core-kuberentes-service",level:2},{value:"The Core API",id:"the-core-api",level:2},{value:"Accessing from production code",id:"accessing-from-production-code",level:2},{value:"Accessing Model predictions",id:"accessing-model-predictions",level:2}],l={toc:u};function p(e){let{components:t,...r}=e;return(0,o.kt)("wrapper",(0,n.Z)({},l,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"querying-features-and-models-in-production"},"Querying Features and Models in production"),(0,o.kt)("p",null,"Get feature values in production is done using the Core API over gRPC or the REST API."),(0,o.kt)("h2",{id:"accessing-the-core-kuberentes-service"},"Accessing the Core Kuberentes service"),(0,o.kt)("p",null,"Installing Raptor Core will create a Kubernetes Service that exposes the Core API."),(0,o.kt)("p",null,"Service name: ",(0,o.kt)("inlineCode",{parentName:"p"},"raptor-core-service"),"\nNamespace: ",(0,o.kt)("inlineCode",{parentName:"p"},"raptor-system"),"\ngRPC port: ",(0,o.kt)("inlineCode",{parentName:"p"},"60000"),"\nREST API port: ",(0,o.kt)("inlineCode",{parentName:"p"},"60001")),(0,o.kt)("h2",{id:"the-core-api"},"The Core API"),(0,o.kt)("p",null,"The Core API allows you to access the features values and models predictions in a low-latency and high-throughput manner,\nas well as accessing the low-level operations of the engine(Such as setting/incrementing/"),(0,o.kt)("p",null,"For more information about the Core API, please refer to the ",(0,o.kt)("a",{parentName:"p",href:"/reference/"},"Reference")," section."),(0,o.kt)("h2",{id:"accessing-from-production-code"},"Accessing from production code"),(0,o.kt)("p",null,"The Core API is exposed over gRPC and REST, and can be accessed from any language that supports gRPC or REST."),(0,o.kt)("h2",{id:"accessing-model-predictions"},"Accessing Model predictions"),(0,o.kt)("p",null,"Models can be accessed using the same API for feature values. Just use the Model FQN as the selector \ud83d\ude43"))}p.isMDXComponent=!0}}]);