"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[4437],{84907:(e,t,r)=>{r.d(t,{Zo:()=>p,kt:()=>d});var n=r(39953);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function l(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var c=n.createContext({}),i=function(e){var t=n.useContext(c),r=t;return e&&(r="function"==typeof e?e(t):l(l({},t),e)),r},p=function(e){var t=i(e.components);return n.createElement(c.Provider,{value:t},e.children)},f="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,o=e.originalType,c=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),f=i(r),m=a,d=f["".concat(c,".").concat(m)]||f[m]||u[m]||o;return r?n.createElement(d,l(l({ref:t},p),{},{components:r})):n.createElement(d,l({ref:t},p))}));function d(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=r.length,l=new Array(o);l[0]=m;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s[f]="string"==typeof e?e:a,l[1]=s;for(var i=2;i<o;i++)l[i]=r[i];return n.createElement.apply(null,l)}return n.createElement.apply(null,r)}m.displayName="MDXCreateElement"},80465:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>c,contentTitle:()=>l,default:()=>f,frontMatter:()=>o,metadata:()=>s,toc:()=>i});var n=r(1943),a=(r(39953),r(84907));const o={sidebar_label:"local_state",title:"local_state"},l=void 0,s={unversionedId:"reference/labsdk/local_state",id:"reference/labsdk/local_state",title:"local_state",description:"manifests",source:"@site/docs/reference/labsdk/local_state.md",sourceDirName:"reference/labsdk",slug:"/reference/labsdk/local_state",permalink:"/reference/labsdk/local_state",draft:!1,editUrl:"https://github.com/raptor-ml/docs/tree/master/docs/reference/labsdk/local_state.md",tags:[],version:"current",frontMatter:{sidebar_label:"local_state",title:"local_state"},sidebar:"reference",previous:{title:"decorators",permalink:"/reference/labsdk/decorators"},next:{title:"program",permalink:"/reference/labsdk/program"}},c={},i=[{value:"manifests",id:"manifests",level:4}],p={toc:i};function f(e){let{components:t,...r}=e;return(0,a.kt)("wrapper",(0,n.Z)({},p,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h4",{id:"manifests"},"manifests"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},"def manifests(save_to_tmp=False, print_manifests=False)\n")),(0,a.kt)("p",null,"manifests will create a list of registered Raptor manifests ready to install for your kubernetes cluster"),(0,a.kt)("p",null,"If save_to_tmp is True, it will save the manifests to a temporary file and return the path to the file.\nOtherwise, it will print the manifests."))}f.isMDXComponent=!0}}]);